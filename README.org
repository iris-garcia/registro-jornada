[[https://www.gnu.org/licenses/gpl-3.0][https://img.shields.io/badge/License-GPLv3-blue.svg]] [[https://travis-ci.com/iris-garcia/workday][https://travis-ci.com/iris-garcia/workday.svg?branch=master]] [[https://github.com/iris-garcia/workday/actions][https://github.com/iris-garcia/workday/workflows/Unit%20tests/badge.svg]]

* Workday
** What's the idea?
Since last May 12, 2019 every Spanish company is required to provide
their employees a process to record their working hours.

This process can be as simple as signing in a paper the checks in and
checks out for every single workday; but any other process can be used
and this is the reason for which I decided to develop this project.

Initially the idea is to provide a RESTful API which could be used in
any company to register those checks in and checks out, and allow the
"administrators" to retrieve the data at any time they are requested
to.

** How is it going to be developed?
- RESTful API design.
- Test-driven development and Behavior-driven development.
- Isolated development environment (probably using Docker containers).
- Continuous Integration.
- Gitflow workflow.
- Storing persistent data in a relational database.
- Logging services.
- Authentication

** Documentation
The extended documentation is hosted [[https://iris-garcia.github.io/workday/][here]].

* How to contribute
** Setup the environment
2. Fork the repository.
3. Clone your forked repository.
4. Run ~go get~ to install the dependencies.

** (Optional) run MariaDB in a docker container
1. Run the container persisting the data
   #+begin_src bash
     docker run --name mariadb -e MYSQL_RANDOM_ROOT_PASSWORD=yes -e MYSQL_PASSWORD=workday \
            -e MYSQL_USER=workday -e MYSQL_DATABASE=workday -v $(pwd)/internal/db/data:/var/lib/mysql \
            -v $(pwd)/internal/db/sql:/sql -p 3306:3306 -d mariadb:10.4
   #+end_src
2. Import the ~initial.sql~ file.
   #+begin_src bash
     docker exec -it mariadb bash
     mysql -u workday -pworkday workday < /sql/initial.sql
   #+end_src

** Add your contribution
1. Create a new branch:
   - ~bug/short-description~
   - ~feature/short-description~
2. Write tests to cover your changes.
3. Run the tests.
   #+begin_src bash
     go test -cover -v
   #+end_src
4. Build and run the binary
   #+begin_src bash
     go build cmd/workday/workday.go
     ./workday
   #+end_src
5. Push the branch to your fork once you think everything works as
   expected.

** Request the integration
1. Create a Pull Request from your branch to ~master~.


* To be removed
[![Build Status](https://travis-ci.com/iris-garcia/workday.svg?branch=master)](https://travis-ci.com/iris-garcia/workday)
