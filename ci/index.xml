<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Continuous Integration on Webhooks Handler</title>
    <link>https://iris-garcia.github.io/workday/ci/</link>
    <description>Recent content in Continuous Integration on Webhooks Handler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>iris.garcia.desebastian@gmail.com (Iris Garcia)</managingEditor>
    <webMaster>iris.garcia.desebastian@gmail.com (Iris Garcia)</webMaster>
    <lastBuildDate>Sun, 27 Oct 2019 18:56:28 +0100</lastBuildDate>
    
	<atom:link href="https://iris-garcia.github.io/workday/ci/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Travis CI</title>
      <link>https://iris-garcia.github.io/workday/ci/travis/</link>
      <pubDate>Fri, 18 Oct 2019 00:54:18 +0200</pubDate>
      <author>iris.garcia.desebastian@gmail.com (Iris Garcia)</author>
      <guid>https://iris-garcia.github.io/workday/ci/travis/</guid>
      <description>Description Travis is a hosted continuous integration service used to build and test software projects hosted at GitHub.
It provides a free plan for open source projects which is very convinient for our use case.
The whole configuration is set up in a single file .travis.yml which must be placed in the root directory of the project.
Configuration To avoid replicating exactly the same workflows in GitHub Actions and Travis, there are some little changes like testing two different Go versions: v1.</description>
    </item>
    
    <item>
      <title>GitHub Actions</title>
      <link>https://iris-garcia.github.io/workday/ci/github/</link>
      <pubDate>Wed, 16 Oct 2019 20:41:58 +0200</pubDate>
      <author>iris.garcia.desebastian@gmail.com (Iris Garcia)</author>
      <guid>https://iris-garcia.github.io/workday/ci/github/</guid>
      <description>Description GitHub Actions is the new continuous integration and deployment system built and maintained by the community.
Configuration Currently there are two workflows configured:
Test and coverage This workflow takes care of the Unit tests and shows the total coverage of the project.
on:pushname:Unittestsjobs:checks:name:runruns-on:ubuntu-lateststeps:-uses:actions/checkout@master-name:runuses:cedrickring/golang-action@1.4.1env:GO111MODULE:&amp;#34;on&amp;#34;with:args:gobuild&amp;amp;&amp;amp;gotest-cover-v Hugo documentation site This workflow is not really a typical continuous integration one, but I think it makes sense to mention it here as it is taking care of automatically update the documentation site.</description>
    </item>
    
  </channel>
</rss>