<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Workday</title>
    <link>https://iris-garcia.github.io/workday/docker/</link>
    <description>Recent content in Docker on Workday</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>iris.garcia.desebastian@gmail.com (Iris Garcia)</managingEditor>
    <webMaster>iris.garcia.desebastian@gmail.com (Iris Garcia)</webMaster>
    <lastBuildDate>Fri, 06 Dec 2019 18:24:51 +0100</lastBuildDate>
    
	<atom:link href="https://iris-garcia.github.io/workday/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dockerfile</title>
      <link>https://iris-garcia.github.io/workday/docker/dockerfile/</link>
      <pubDate>Fri, 06 Dec 2019 18:24:52 +0100</pubDate>
      <author>iris.garcia.desebastian@gmail.com (Iris Garcia)</author>
      <guid>https://iris-garcia.github.io/workday/docker/dockerfile/</guid>
      <description>To create a Docker image, we have added two new files to our project:
 Dockerfile: Contains the needed commands to create the image. .dockerignore: It works like .gitignore for git, it allows to define which file/s should not be included in the Docker image when the command ADD or COPY is/are invoked.   # Use a golang image as base builder imageFROMgolang:1.13 as builder# Create the project&amp;#39;s directory under the default GOPATHRUN mkdir -p /go/src/github.</description>
    </item>
    
    <item>
      <title>Building the Docker image</title>
      <link>https://iris-garcia.github.io/workday/docker/build/</link>
      <pubDate>Fri, 06 Dec 2019 18:28:28 +0100</pubDate>
      <author>iris.garcia.desebastian@gmail.com (Iris Garcia)</author>
      <guid>https://iris-garcia.github.io/workday/docker/build/</guid>
      <description>To build the Docker image locally we can run the following command from the root directory of the project:
$ docker build . -t workday Sending build context to Docker daemon 118.8kB Step 1/11 : FROM golang:1.13 as builder ---&amp;gt; a2e245db8bd3 Step 2/11 : RUN mkdir -p /go/src/github.com/iris-garcia/workday ---&amp;gt; Running in 61717fb25087 Removing intermediate container 61717fb25087 ---&amp;gt; eaf6e4d73eb4 Step 3/11 : WORKDIR /go/src/github.com/iris-garcia/workday ---&amp;gt; Running in 41ddb2a701bd Removing intermediate container 41ddb2a701bd ---&amp;gt; d5b6af426ca6 Step 4/11 : COPY .</description>
    </item>
    
    <item>
      <title>Docker Hub</title>
      <link>https://iris-garcia.github.io/workday/docker/dockerhub/</link>
      <pubDate>Fri, 06 Dec 2019 18:24:52 +0100</pubDate>
      <author>iris.garcia.desebastian@gmail.com (Iris Garcia)</author>
      <guid>https://iris-garcia.github.io/workday/docker/dockerhub/</guid>
      <description>Now that we have a working Docker image we want to automate the building process, so it automatically builds and publishes the image with every new code change.
Step 1: Register in Docker Hub Just click in Sing up and fill up the following form:
  Step 2: Create a new Repository Click in Create Repository + and name it accordingly, under the Build Settings section select the Connected option with a GitHub logo to autobuild a new image with every git push event as long as it matches the build rules, which in our case are the default ones (the Dockerfile is located in the root directory of the project).</description>
    </item>
    
  </channel>
</rss>